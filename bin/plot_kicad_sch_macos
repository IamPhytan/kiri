#! /bin/bash

# This tool works with Kicad 6
# Tested on 6.0.5
# Requires: cliclick

ctrl_c()
{
	kill -9 "${XVFB_PID}" &> /dev/null
	kill -9 "${EESCHEMA_PID}" &> /dev/null
	exit 1
}

get_filename_without_extension()
{
	local filename="$(basename -- "${1}")"
	echo "${filename%.*}"
}

configure_and_plot()
{
	local kicad_sch="${1}"
	local output_dir_path="${2}"

	open -a Eeschema "${kicad_sch}"
	sleep 2
	export EESCHEMA_PID=$(ps aux | grep -v grep | grep -i eeschema.app | awk '{print $2;}')

	# Launch PLOT window

	cliclick c:150,11
	cliclick w:100

	cliclick kp:arrow-up
	cliclick w:100

	cliclick kp:return
	cliclick w:100

	# Select the input field to put the plot folder

	cliclick kp:tab
	cliclick w:100

	cliclick kp:delete
	cliclick w:100

	# BUG: cliclick id not handling well strings with "m" like in tmp_xxxx
	cliclick t:${output_dir_path}
	liclick w:100

	# Select SVG by clicking the radio list (keyboard does not change the selection)
	# Does it work on other screen sizes/resolutions?
	# cliclick m:290,325 # Move mouse to the point, helps to find the x,y coordinates
	cliclick c:290,325

	# Plot in Black and White

	cliclick kp:tab
	cliclick w:100

	cliclick kp:tab
	cliclick w:100

	cliclick kp:tab
	cliclick w:100

	cliclick kp:tab
	cliclick w:100

	cliclick kp:tab
	cliclick w:100

	cliclick kp:arrow-down
	cliclick w:100

	cliclick kp:arrow-down
	cliclick w:100

	cliclick kp:return
	cliclick w:100

	# PLOT
	cliclick kp:return
	cliclick w:100


	# Dismiss plot window
	cliclick kp:esc
	cliclick w:100

	# Close Eeschema
	# cliclick kd:cmd kp:q
	# cliclick w:100

	# HIDE WINDOW

	# cliclick c:110,11
	# cliclick w:100

	# cliclick ku:cmd
	# cliclick w:100

	# cliclick kp:arrow-down
	# cliclick w:100

	# cliclick kp:arrow-down
	# cliclick w:100

	# cliclick kp:arrow-down
	# cliclick w:100

	# cliclick kp:arrow-down
	# cliclick w:100

	# cliclick kp:return
	# cliclick w:100

	kill -9 ${EESCHEMA_PID} 2> /dev/null
}

main()
{
	trap "exit 1" TERM
	trap ctrl_c INT

	local kicad_sch_path="${1}"
	local output_dir_path="${2}"

	if [[ ! -f "${kicad_sch_path}" ]]; then
		echo "Missing .kicad_sch file"
		exit 1
	fi

	local project_name=$(get_filename_without_extension "${kicad_sch_path}")

	if [[ "${#}" -lt 2 ]]; then
		output_dir_path="."
	else
		output_dir_path="${2}"
		if [[ ! -d "${output_dir_path}" ]]; then
			echo "Error: \"${output_dir_path}\" does not exist"
			exit 1
		fi
	fi

	echo -e "Schematic_path = ${kicad_sch_path}"
	echo -e "   Output_path = ${output_dir_path}"

	local temp_dir=$(mktemp -d "dir_${RANDOM}")
	local output_temp_dir_path="${output_dir_path}/${temp_dir}"
	mkdir -p "${output_temp_dir_path}" &> /dev/null

	configure_and_plot "${kicad_sch_path}" "${output_temp_dir_path}" 2> /dev/null

	# Organize generated files for KiRI
	svg_file_paths=($(find "${output_temp_dir_path}" -name "*.svg"))

	if [[ -n ${svg_file_paths} ]]; then
		IFS=$'\n'
		for svg_file in "${svg_file_paths[@]}"; do
			new_file=$(echo "${svg_file}" | sed "s|${temp_dir}/|sch-|g" )
			echo "      Plotting = ${new_file}"
			mv "${svg_file}" "${new_file}" 2> /dev/null
		done
		echo
	fi

	rm -rf "${temp_dir}"
}

main "${@}" | tee .kiri.log
